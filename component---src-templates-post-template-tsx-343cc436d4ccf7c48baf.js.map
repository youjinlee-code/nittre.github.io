{"version":3,"file":"component---src-templates-post-template-tsx-343cc436d4ccf7c48baf.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/components/Post/PostFooter.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\nexport type PostHeadInfoProps = {\n  title: string\n  date: string\n  summary: string\n  categories: string[]\n}\n\nconst PostHeadInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  height: 100%;\n  margin: 6em auto 0 auto;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 1em 1em;\n    margin: 4em auto 0 auto;\n\n  }\n`\n\n// const PrevPageIcon = styled.div`\n//   display: grid;\n//   place-items: center;\n//   width: 40px;\n//   height: 40px;\n//   border-radius: 50%;\n//   background: #ffffff;\n//   color: #000000;\n//   font-size: 22px;\n//   cursor: pointer;\n//   box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n\n//   @media (max-width: 768px) {\n//     width: 30px;\n//     height: 30px;\n//     font-size: 18px;\n//   }\n// `\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  margin-bottom: 0.25em;\n  text-overflow: ellipsis;\n  white-space: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 2.4em;\n  font-weight: 800;\n\n  @media (max-width: 768px) {\n    font-size: 30px;\n  }\n`\n\nconst PostData = styled.div`\n  display: flex;\n//   justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n  font-size: 0.9em;\n  font-weight: 400;\n\n  &>div {\n    margin-right: 1em;\n    margin-bottom: 0.25em;\n\n  }\n`\n\nconst CategoryItem = styled(Link)`\nmargin-right: 0.5em;\ntext-decoration: underline;\ncursor: pointer;\n\n&:last-of-type {\n  margin-right: 0;\n}\n\n&:hover {\n    color: #6AB767;\n    text-decoration: underline;\n}\n`\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\n  title,\n  date,\n  summary,\n  categories,\n}) {\n//   const goBackPage = () => window.history.back()\n\n  return (\n    <PostHeadInfoWrapper>\n      {/* <PrevPageIcon onClick={goBackPage}>\n        ↩️\n      </PrevPageIcon> */}\n      <Title>{title}</Title>\n      <div>{summary}</div>\n      <PostData>\n        <div>{date}</div>\n        <div>{categories.map(name => (<CategoryItem \n                    to={`/?category=${name}`} \n                    key={name}>\n                        #{name}\n                </CategoryItem>))}</div>\n         \n      </PostData>\n    </PostHeadInfoWrapper>\n  )\n}\n\nexport default PostHeadInfo","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\nimport PostHeadInfo, {PostHeadInfoProps} from './PostHeadInfo'\n\ntype GatsbyImgProps = {\n  image: IGatsbyImageData\n  alt: string\n  className?: string\n}\n\ntype PostHeadProps = PostHeadInfoProps\n\nconst PostHeadWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n\n  @media (max-width: 768px) {\n    height: 300px;\n  }\n`\n\n// const BackgroundImage = styled((props: GatsbyImgProps) => (\n//   <GatsbyImage {...props} style={{ position: 'absolute' }} />\n// ))`\n//   z-index: -1;\n//   width: 100%;\n//   height: 400px;\n//   object-fit: cover;\n//   filter: brightness(0.25);\n\n//   @media (max-width: 768px) {\n//     height: 300px;\n//   }\n// `\n\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\n  title,\n  date,\n  categories,\n  summary\n}) {\n  return (\n    <PostHeadWrapper>\n      {/* <BackgroundImage image={thumbnail} alt=\"thumbnail\" /> */}\n      <PostHeadInfo summary={summary} title={title} date={date} categories={categories} />\n    </PostHeadWrapper>\n  )\n}\n\nexport default PostHead","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\n\ninterface PostContentProps {\n  html: string\n}\n\nconst MarkdownRenderer = styled.div`\n// Renderer Style\ndisplay: flex;\nflex-direction: column;\nwidth: 768px;\nmargin: 0 auto;\npadding: 4em 0;\nword-break: break-all;\n\n// Markdown Style\nline-height: 1.8;\nfont-size: 16px;\nfont-weight: 400;\n\n// Apply Padding Attribute to All Elements\np {\n  padding: 3px 0;\n}\n\n// Adjust Heading Element Style\nh1,\nh2,\nh3 {\n  font-weight: 700;\n  margin-bottom: 0.5em;\n}\n\n* + h1,\n* + h2 {\n  margin-top: 1.2em;\n}\n* + h3 {\n  margin-top: 1.2em;\n}\n* + h4 {\n  margin-top: 0.8em;\n}\n\n\nhr + h1,\nhr + h2,\nhr + h3 {\n  margin-top: 0;\n}\n\nh1 + h2,\nh2 + h3,\nh3 + h4 {\n  margin-top: 0;\n}\n\n  h1 {\n    font-size: 2em;\n  }\n\n  h2 {\n    font-size: 1.7em;\n  }\n\n  h3 {\n    font-size: 1.4em;\n  }\n\n  h4 {\n    font-size: 1.1em;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 30px 0;\n    padding: 5px 15px;\n    border-left: 2px solid #000000;\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 30px 0;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px solid #000000;\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 30px 0;\n    padding: 1.5em;\n    font-size: 15px;\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n    border-radius: 1em;\n   \n  }\n  // Markdown Responsive Design\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 2em 1em;\n    line-height: 1.6;\n    font-size: 1em;\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n\n`\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\n}\n\nexport default PostContent","import React, { createRef, FunctionComponent, useEffect } from 'react'\nimport styled from '@emotion/styled'\n\nconst src = 'https://utteranc.es/client.js'\nconst repo = 'nittre/nittre.github.io' // 자신 계정의 레포지토리로 설정\n\ntype UtterancesAttributesType = {\n  src: string\n  repo: string\n  'issue-term': string\n  label: string\n  theme: string\n  crossorigin: string\n  async: string\n};\n\nconst UtterancesWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 20px;\n  }\n  `\n\nconst CommentWidget: FunctionComponent = function () {\n  const element = createRef<HTMLDivElement>()\n\n  useEffect(() => {\n    if (element.current === null) return\n\n    const utterances: HTMLScriptElement = document.createElement('script')\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: `github-light`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    }\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n\n    element.current.appendChild(utterances)\n  }, [])\n\n  return <UtterancesWrapper ref={element} />\n}\n\nexport default CommentWidget\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { FooterArticle } from '../../templates/post_template'\nimport { Link } from 'gatsby'\n\n\ntype PostFooterProps = {\n    previous: FooterArticle | null\n    next: FooterArticle | null\n}\n\nconst PostFooterWrapper = styled.div`\n    display: flex;\n    margin-bottom: 40px;\n    \n\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    max-width: 768px;\n    margin-left: auto;\n    margin-right: auto;\n\n    @media screen and (max-width: 768px) {\n        flex-wrap: wrap;\n    }\n`\n\nconst Article = styled(Link)`\nflex: 1 1 50%;\n\ndisplay: flex;\nflex-direction: column;\npadding: 12px;\nborder-radius: 6px;\nborder: 1px solid #eaebec;\n\ntext-decoration: none;\n\n&:first-child {\n  margin-right: 8px;\n}\n\n&:last-child {\n  margin-left: 8px;\n  text-align: right;\n}\n\n&:first-child:last-child {\n  margin: 0;\n}\n\n@media screen and (max-width: 768px) {\n  flex-basis: 100%;\n\n  &:first-child,\n  &:last-child {\n    margin: 6px 1em;\n  }\n}\n`\n\nconst ArticleLabel = styled.div`\n  font-size: 0.825em;\n  margin-bottom: 8px;\n`;\n\nconst ArticleTitle = styled.strong``;\n\nconst PostFooter: FunctionComponent<PostFooterProps> = function ({\n  previous, next\n}) {\n  return (\n    <PostFooterWrapper>\n        {\n           [previous, next].map((article, i) =>\n                article != null ? (\n                    <Article key={article.fields.slug} to={article.fields.slug}>\n                        <ArticleLabel>\n                            {i === 0 ? \"이전 글\" : \"다음 글\"}\n                        </ArticleLabel>\n                        <ArticleTitle>\n                            {article.frontmatter.title}\n                        </ArticleTitle>\n                    </Article>\n                ) : null\n           )\n        }\n    </PostFooterWrapper>\n            \n  )\n}\n\nexport default PostFooter","import React, {FunctionComponent} from 'react'\nimport {graphql} from 'gatsby';\nimport Template from '../components/Common/Template';\nimport PostHead from '../components/Post/PostHead';\nimport PostContent from '../components/Post/PostContent';\nimport CommentWidget from '../components/Post/CommentWidget';\nimport PostFooter from '../components/Post/PostFooter';\n\nexport type FooterArticle = {\n    fields: {\n        slug: string\n    }\n    frontmatter : {\n        title: string\n    }\n    id: string\n} \ntype PostTemplateProps = {\n    data: {\n      allMarkdownRemark: {\n        edges: PostPageItemType[] // 존재하지 않는 타입이므로 에러가 발생하지만 일단 작성해주세요\n      }\n    }\n    location: {\n        href: string\n    },\n    pageContext:{\n        previous: FooterArticle | null\n        next: FooterArticle | null\n    }\n  }\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n    data: {\n      allMarkdownRemark: { edges },\n    },\n    location: {href},\n    pageContext: {\n        previous, next\n    }\n  }) {\n    const {\n      node: {\n        html,\n        frontmatter: {\n          title,\n          summary, // 나중에 사용할 예정입니다!\n          date,\n          categories,\n        },\n      },\n    } = edges[0]\n    \n    return (\n      <Template title={title} description={summary} url={href}>\n        <PostHead\n          title={title}\n          date={date}\n          categories={categories}\n          summary={summary}\n        />\n        \n        <PostContent html={html} />\n        <PostFooter previous={previous} next={next} />\n\n        <CommentWidget />\n        \n      </Template>\n    )\n  }\n\nexport default PostTemplate\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug(\n    $slug: String\n    ) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY-MM-DD\")\n            categories\n            \n          }\n        }\n      }\n    }\n  }\n`\n\n\n\nexport type PostPageItemType = {\n    node: {\n      html: string\n      frontmatter: PostFrontmatterType\n    }\n  }"],"names":["PostHeadInfoWrapper","Title","PostData","CategoryItem","_styled","Link","title","date","summary","categories","___EmotionJSX","map","name","to","key","PostHeadWrapper","PostHeadInfo","MarkdownRenderer","target","styles","html","dangerouslySetInnerHTML","__html","UtterancesWrapper","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","Object","entries","forEach","_ref","value","setAttribute","appendChild","ref","PostFooterWrapper","Article","ArticleLabel","ArticleTitle","previous","next","article","i","fields","slug","frontmatter","data","allMarkdownRemark","edges","location","href","pageContext","node","Template","description","url","PostHead","PostContent","PostFooter","CommentWidget"],"sourceRoot":""}